# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  schedule:
    - cron: 0 20 * * *

permissions:
  contents: read

jobs:

  build_openwrt:

    name: Build OpenWrt Firmware

    runs-on: ubuntu-latest

    steps:
      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Checkout OpenWrt
        uses: actions/checkout@v3

      - name: Update feeds
        run: |
          echo 'src-git helloworld https://github.com/fw876/helloworld' >> ./feeds.conf.default
          sed -i 's/\"#src-git\"/\"src-git\"/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
                run: |
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          #
          # ========================固件定制部分========================
          #
       CONFIG_TARGET_msm89xx=y
       CONFIG_TARGET_msm89xx_msm8916=y
       CONFIG_TARGET_msm89xx_msm8916_DEVICE_openstick-ufi003=y
       CONFIG_LIBCURL_COOKIES=y
       CONFIG_LIBCURL_CRYPTO_AUTH=y
       CONFIG_LIBCURL_FILE=y
       CONFIG_LIBCURL_FTP=y
       CONFIG_LIBCURL_HTTP=y
       CONFIG_LIBCURL_NGHTTP2=y
       CONFIG_LIBCURL_OPENSSL=y
       CONFIG_LIBCURL_PROXY=y
       CONFIG_LIBCURL_TFTP=y
       CONFIG_LIBCURL_THREADED_RESOLVER=y
       CONFIG_LIBCURL_TLS_SRP=y
       CONFIG_LIBCURL_UNIX_SOCKETS=y
       CONFIG_LIBQMI_COLLECTION_BASIC=y
       CONFIG_LIBQMI_WITH_MBIM_QMUX=y
       CONFIG_LIBQMI_WITH_QRTR_GLIB=y
       CONFIG_LUCI_LANG_zh_Hans=y
       CONFIG_MODEMMANAGER_WITH_MBIM=y
       CONFIG_MODEMMANAGER_WITH_QMI=y
       CONFIG_MODEMMANAGER_WITH_QRTR=y
       CONFIG_PACKAGE_android-tools-adbd=y
       CONFIG_PACKAGE_boost=y
       CONFIG_PACKAGE_boost-program_options=y
       CONFIG_PACKAGE_boost-system=y
       CONFIG_PACKAGE_cgi-io=y
       CONFIG_PACKAGE_chinadns-ng=y
       CONFIG_PACKAGE_coreutils=y
       CONFIG_PACKAGE_coreutils-base64=y
       CONFIG_PACKAGE_coreutils-nohup=y
       CONFIG_PACKAGE_curl=y
       CONFIG_PACKAGE_dbus=y
       CONFIG_PACKAGE_dns2socks=y
       CONFIG_PACKAGE_dns2tcp=y
       CONFIG_PACKAGE_gc=y
       CONFIG_PACKAGE_glib2=y
       CONFIG_PACKAGE_haproxy=y
       CONFIG_PACKAGE_ip-full=y
       CONFIG_PACKAGE_ipt2socks=y
       CONFIG_PACKAGE_kmod-inet-diag=y
       CONFIG_PACKAGE_kmod-mii=y
       CONFIG_PACKAGE_kmod-netlink-diag=y
       CONFIG_PACKAGE_kmod-nf-socket=y
       CONFIG_PACKAGE_kmod-nf-tproxy=y
       CONFIG_PACKAGE_kmod-nft-socket=y
       CONFIG_PACKAGE_kmod-nft-tproxy=y
       CONFIG_PACKAGE_kmod-tun=y
       CONFIG_PACKAGE_kmod-usb-gadget-functionfs=y
       CONFIG_PACKAGE_kmod-usb-net=y
       CONFIG_PACKAGE_kmod-usb-net-cdc-ether=y
       CONFIG_PACKAGE_kmod-usb-net-rndis=y
       CONFIG_PACKAGE_libatomic=y
       CONFIG_PACKAGE_libattr=y
       CONFIG_PACKAGE_libbpf=y
       CONFIG_PACKAGE_libconfig=y
       CONFIG_PACKAGE_libcurl=y
       CONFIG_PACKAGE_libdbus=y
       CONFIG_PACKAGE_libelf=y
       CONFIG_PACKAGE_libev=y
       CONFIG_PACKAGE_libexpat=y
       CONFIG_PACKAGE_libffi=y
       CONFIG_PACKAGE_libltdl=y
       CONFIG_PACKAGE_liblua=y
       CONFIG_PACKAGE_liblua5.3=y
       CONFIG_PACKAGE_liblucihttp=y
       CONFIG_PACKAGE_liblucihttp-lua=y
       CONFIG_PACKAGE_liblucihttp-ucode=y
       CONFIG_PACKAGE_libmbim=y
       CONFIG_PACKAGE_libncurses=y
       CONFIG_PACKAGE_libnghttp2=y
       CONFIG_PACKAGE_libpcre2=y
       CONFIG_PACKAGE_libqmi=y
       CONFIG_PACKAGE_libqrtr-glib=y
       CONFIG_PACKAGE_libreadline=y
       CONFIG_PACKAGE_libstdcpp=y
       CONFIG_PACKAGE_libubus-lua=y
       CONFIG_PACKAGE_libuci-lua=y
       CONFIG_PACKAGE_libusbgx=y
       CONFIG_PACKAGE_lua=y
       CONFIG_PACKAGE_luci=y
       CONFIG_PACKAGE_luci-app-firewall=y
       CONFIG_PACKAGE_luci-app-package-manager=y
       CONFIG_PACKAGE_luci-app-passwall=y
       CONFIG_PACKAGE_luci-base=y
       CONFIG_PACKAGE_luci-compat=y
       CONFIG_PACKAGE_luci-i18n-base-zh-cn=y
       CONFIG_PACKAGE_luci-i18n-firewall-zh-cn=y
       CONFIG_PACKAGE_luci-i18n-package-manager-zh-cn=y
       CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y
       CONFIG_PACKAGE_luci-lib-base=y
       CONFIG_PACKAGE_luci-lib-ip=y
       CONFIG_PACKAGE_luci-lib-jsonc=y
       CONFIG_PACKAGE_luci-lib-nixio=y
       CONFIG_PACKAGE_luci-light=y
       CONFIG_PACKAGE_luci-lua-runtime=y
       CONFIG_PACKAGE_luci-mod-admin-full=y
       CONFIG_PACKAGE_luci-mod-network=y
       CONFIG_PACKAGE_luci-mod-status=y
       CONFIG_PACKAGE_luci-mod-system=y
       CONFIG_PACKAGE_luci-proto-ipv6=y
       CONFIG_PACKAGE_luci-proto-modemmanager=y
       CONFIG_PACKAGE_luci-proto-ppp=y
       CONFIG_PACKAGE_luci-theme-argon=y
       CONFIG_PACKAGE_luci-theme-bootstrap=y
       CONFIG_PACKAGE_microsocks=y
       CONFIG_PACKAGE_modemmanager=y
       CONFIG_PACKAGE_resolveip=y
       CONFIG_PACKAGE_rpcd=y
       CONFIG_PACKAGE_rpcd-mod-file=y
       CONFIG_PACKAGE_rpcd-mod-iwinfo=y
       CONFIG_PACKAGE_rpcd-mod-luci=y
       CONFIG_PACKAGE_rpcd-mod-rrdns=y
       CONFIG_PACKAGE_rpcd-mod-ucode=y
       CONFIG_PACKAGE_shadowsocks-rust-sslocal=y
       CONFIG_PACKAGE_shadowsocks-rust-ssserver=y
       CONFIG_PACKAGE_simple-obfs-client=y
       CONFIG_PACKAGE_sing-box=y
       CONFIG_PACKAGE_tcping=y
       CONFIG_PACKAGE_terminfo=y
       CONFIG_PACKAGE_trojan-plus=y
       CONFIG_PACKAGE_ucode-mod-html=y
       CONFIG_PACKAGE_ucode-mod-lua=y
       CONFIG_PACKAGE_ucode-mod-math=y
       CONFIG_PACKAGE_uhttpd=y
       CONFIG_PACKAGE_uhttpd-mod-ubus=y
       CONFIG_PACKAGE_unzip=y
       CONFIG_PACKAGE_v2ray-plugin=y
       CONFIG_PACKAGE_xray-core=y
       CONFIG_PACKAGE_zlib=y
       CONFIG_SING_BOX_BUILD_ACME=y
       CONFIG_SING_BOX_BUILD_CLASH_API=y
       CONFIG_SING_BOX_BUILD_ECH=y
       CONFIG_SING_BOX_BUILD_GVISOR=y
       CONFIG_SING_BOX_BUILD_QUIC=y
       CONFIG_SING_BOX_BUILD_REALITY_SERVER=y
       CONFIG_SING_BOX_BUILD_UTLS=y
       CONFIG_SING_BOX_BUILD_WIREGUARD=y
       CONFIG_boost-compile-visibility-hidden=y
       CONFIG_boost-runtime-shared=y
       CONFIG_boost-static-and-shared-libs=y
       CONFIG_boost-variant-release=y
 


          #
          # ========================固件定制部分结束========================
          #
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
          # 网络配置信息，将从 zzz-default-settings 文件的第2行开始添加
          sed -i "2i # network config" ./package/lean/default-settings/files/zzz-default-settings
          # 默认 IP 地址，旁路由时不会和主路由的 192.168.1.1 冲突
          sed -i "3i uci set network.lan.ipaddr='192.168.1.5'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "4i uci set network.lan.proto='static'" ./package/lean/default-settings/files/zzz-default-settings # 静态 IP
          sed -i "5i uci set network.lan.type='bridge'" ./package/lean/default-settings/files/zzz-default-settings  # 接口类型：桥接
          sed -i "6i uci set network.lan.ifname='eth0'" ./package/lean/default-settings/files/zzz-default-settings  # 网络端口：默认 eth0，第一个接口
          sed -i "7i uci set network.lan.netmask='255.255.255.0'" ./package/lean/default-settings/files/zzz-default-settings    # 子网掩码
          sed -i "8i uci set network.lan.gateway='192.168.1.1'" ./package/lean/default-settings/files/zzz-default-settings  # 默认网关地址（主路由 IP）
          sed -i "9i uci set network.lan.dns='192.168.1.1'" ./package/lean/default-settings/files/zzz-default-settings  # 默认上游 DNS 地址
          sed -i "10i uci commit network\n" ./package/lean/default-settings/files/zzz-default-settings

      - name: Download packages
        run: make download -j16

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Upload buildinfo
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Upload firmware
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
